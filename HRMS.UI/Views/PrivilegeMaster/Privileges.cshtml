@{
	ViewData["Title"] = "Privilege Master";
	Layout = "~/Views/Shared/_mainLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}

<style>
	.scrollable-container {
		height: 150px; /* Set a fixed height */
		width: 200px; /* Set a fixed width */
		overflow-y: auto; /* Enable vertical scrolling */
		border: 1px solid #ccc; /* Optional: Add a border for visual clarity */
		padding: 5px; /* Optional: Add padding for spacing */
	}

	.select-all {
		margin-bottom: 5px;
		padding: 3px;
		border-bottom: 1px solid #eee; /* Optional: Add a subtle border for separation */
	}

	.branch-item, .department-item, .vertical-item {
		margin: 3px 0;
		padding: 3px;
		border: 1px solid #eee; 
		border-radius: 5px; /* Optional: Round the corners */
		word-wrap: break-word;
	}

	.branch-checkbox, .department-checkbox, .vertical-checkbox, .select-all-checkbox {
		margin-right: 10px;
	}

	.table-container {
		max-width: 100%; /* Fixed width */
		max-height: 300px; /* Fixed height */
		overflow: auto; /* Enable scrolling */
		border: 1px solid #ccc;
		margin: 20px;
	}

	table {
		width: 100%;
		border-collapse: collapse;
	}

	th, td {
		border: 1px solid black;
		padding: 8px;
		text-align: center;
	}

	th {
		background-color: #f2f2f2;
		position: sticky;
		top: 0; /* Stick the header to the top */
	}

	tr:nth-child(even) {
		background-color: #f9f9f9; /* Alternate row color */
	}
	
</style>
<style>
	
	th, td {
		border: 1px solid #ced4da;
		padding: 8px;
		text-align: left;
	}
	.toggle-icon {
		cursor: pointer;
		margin-right: 8px;
		font-size: 12px;
		color: #2395c6;
	}

	.submenu {
		display: none;
	}

	.indent {
		padding-left: 30px;
	}

	.sub-indent {
		padding-left: 60px;
	}

	.module-header {
		background-color: #2395c6;
		color: white;
		font-weight: bold;
       text-align:left;
	}

	.form-check-input {
		cursor: pointer;
	}
</style>
<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row m-2">
			<div class="col-6 ">
				<h6 class="pt-2 mb-0">
				 Privilege Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					@* 					<i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
 *@				
                    <button id="addPrivilegeMaster"
							type="button"
							class="btn mr-1 rounded-1 "
							style="background-color:#2395c6; color:white;">
						Add
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body " >

		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div class="rowCount" id="rowCountPrivilegeMaster"></div>
					<div id="gridContainerPrivilegeMaster">
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>

</div>


<div class="modal fade" id="addPrivilegeMasterModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h6 class="modal-title btn-heading-title" id="exampleModalLabel">
					<span class="formType">Add</span> Privileges
				</h6>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font" style="font-size:12px;">


				<div class="row">

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text" class="form-control floating-input" id="txtPrivilegeName" placeholder=" ">
							<label class="floating-label" for="txtPrivilegeName">Privilege Name*</label>
							<span id="spnPrivilegeName" style="color:red; display:none;">Please Enter Privilege Name</span>

						</div>
					</div>


					        <div class="col-md-1 mt-3 ">
								Type:
							</div>
					        <div class="col-md-3 mt-3 ">
								<div class="form-check">
							<input class="form-check-input" name="type" type="radio" id="rdAdmin">
									<label class="form-check-label" for="rdAdmin">Admin/ESS Panel</label>
								</div>
							</div>
					       <div class="col-md-2 mt-3 ">
								<div class="form-check">
									<input class="form-check-input" name="type" type="radio" id="rdESSPanel">
									<label class="form-check-label" for="rdESSPanel">ESSPanel</label>
								</div>
							</div>
					

				</div>

				<!-- New Fields -->
				<div class="row">
					<div class="col-md-3 mt-3">
						<div id="branchesContainer" class="scrollable-container">
							<div class="select-all">
								<input type="checkbox" id="selectAllBranch" class="select-all-checkbox">
								<label for="selectAllBranch"><strong>Branch</strong></label>
							</div>
						</div>

					</div>
					<div class="col-md-3 mt-3">
						<div id="departmentContainer" class="scrollable-container">
							<div class="select-all">
								<input type="checkbox" id="selectAllDepartment" class="select-all-checkbox">
								<label for="selectAllDepartment"><strong>Department</strong></label>
							</div>

						</div>

					</div>
					<div class="col-md-3 mt-3">
						<div id="verticalContainer" class="scrollable-container">
							<div class="select-all">
								<input type="checkbox" id="selectAllVertical" class="select-all-checkbox">
								<label for="selectAllVertical"><strong>Vertical</strong></label>
							</div>
						</div>

					</div>


				</div>

			

				<div class="row">
					<div class="col-md-12 mt-3">
						<div class="container mt-4">
							<table id="dynamicTable" class="table table-bordered p-0">
								<thead class="table-light">
									<tr>
										<th style="width: 40%">Name</th>
										<th>View</th>
										<th>Edit</th>
										<th>Save</th>
										<th>Delete</th>
									</tr>
								</thead>
								<tbody></tbody> <!-- Data will be populated dynamically -->
							</table>
						</div>

							@* <div class="container mt-4">
								<table class="table table-bordered p-0">
									<thead class="table-light">
										<tr>
											<th style="width: 40%">Name</th>
											<th>View</th>
											<th>Edit</th>
											<th>Save</th>
											<th>Delete</th>
										</tr>
									</thead>
									<tbody>
										<tr class="module-header">
											<td colspan="5">ESS Module</td>
										</tr>

										<!-- Parent: Employee -->
										<tr>
											<td colspan="5">
												<span class="toggle-icon" data-target="emp-sub">▶</span>
												<input type="checkbox" class="form-check-input parent" data-id="emp" /> Employee
											</td>
										</tr>

										<!-- Submenu: My Profile -->
										<tr class="submenu emp-sub">
											<td class="indent" colspan="5">
												<span class="toggle-icon" data-target="profile-sub">▶</span>
												<input type="checkbox" class="form-check-input child" data-parent="emp" /> My Profile
											</td>
											
										</tr>
										<!-- Sub-submenu under My Profile -->
										<tr class="submenu profile-sub">
											<td class="sub-indent">
												<input type="checkbox" class="form-check-input child child-profile" data-parent="emp" /> Contact Info
											</td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
										</tr>

										<tr class="submenu profile-sub">
											<td class="sub-indent">
												<input type="checkbox" class="form-check-input child child-profile" data-parent="emp" /> Qualification
											</td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
										</tr>

										<!-- Submenu: Salary Tab -->
										<tr class="submenu emp-sub">
											<td class="indent">
												<input type="checkbox" class="form-check-input child" data-parent="emp" /> View Salary Tab (For Manager)
											</td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
										</tr>

										<!-- Submenu: Allowance Tab -->
										<tr class="submenu emp-sub">
											<td class="indent">
												<input type="checkbox" class="form-check-input child" data-parent="emp" /> View Allowance Tab
											</td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
											<td><input type="checkbox" class="form-check-input child-action" data-parent="emp" /></td>
										</tr>
									</tbody>
								</table>
							</div>
 *@
						
					</div>
					

				</div>


			</div>

			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnAddPrivilegeMaster" style="background-color:#2395c6; color:white;">Save</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
		$(document).on('click', '.toggle-icon', function () {
		var target = $(this).data('target');
		var rows = $('.' + target);
		if (rows.is(':visible')) {
			rows.hide();
			$(this).text('▶');
		} else {
			rows.show();
			$(this).text('▼');
		}
	});

	$(document).on('change', '.parent', function () {
		var id = $(this).data('id');
		var isChecked = $(this).is(':checked');

		$('.child[data-parent="' + id + '"]').prop('checked', isChecked);

		if (!isChecked) {
			$('.child-action[data-parent="' + id + '"]').prop('checked', isChecked);
		}
	});

	$(document).on('change', '.child', function () {
		var parentId = $(this).data('parent');
		var parent = $('.parent[data-id="' + parentId + '"]');
		var anyChecked = $('.child[data-parent="' + parentId + '"]:checked').length > 0;
		parent.prop('checked', anyChecked);

		var isChecked = $(this).is(':checked');
		$(this).closest('tr').nextAll('.submenu').find('.child-profile').prop('checked', isChecked);

		if (!isChecked) {
			$(this).closest('tr').find('.child-action').prop('checked', false);
		}
	});

	$(document).ready(function () {
				debugger;

			var companyId = 4;
			var pagePanelId = 1;
			var payloadData = {
				pagePanelId: pagePanelId,
				companyId: companyId
			};

			$.ajax({
				url: '@baseUrl/PageMasterAPI/GetPageHierarchyWithPrivileges', // Replace with actual API URL
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(payloadData),
				success: function(response) {
					debugger;
					if (response.isSuccess) {
						console.log(response.data); // Corrected this line
						bindTableData(response.data);
					} else {
						round_error_noti(response.responseMessage);
					}
				},
				error: function(xhr, status, error) {
					console.error("API Error: ", error);
				}
			});


		function bindTableData(data) {
			var tbody = $('#dynamicTable tbody');
			tbody.empty(); 

			data.forEach(panel => {
				var panelRow = `<tr class="module-header"><td colspan="5">${panel.pagePanelName} Module</td></tr>`;
				tbody.append(panelRow);

				panel.pages.forEach(page => {
					var parentRow = `<tr>
						<td colspan="5">
							<span class="toggle-icon" data-target="${page.pageMasterId}-sub">▶</span>
							<input type="checkbox" class="form-check-input parent" data-id="${page.pageMasterId}" /> ${page.pageName}
						</td>
					</tr>`;
					tbody.append(parentRow);

					page.subPages.forEach(subPage => {
						var subRow = `<tr class="submenu ${page.pageMasterId}-sub">
							<td class="indent">
								<input type="checkbox" class="form-check-input child" data-parent="${page.pageMasterId}" /> ${subPage.pageName}
							</td>
							<td><input type="checkbox" class="form-check-input child-action" ${subPage.is_View ? 'checked' : ''}></td>
							<td><input type="checkbox" class="form-check-input child-action" ${subPage.is_Edit ? 'checked' : ''}></td>
							<td><input type="checkbox" class="form-check-input child-action" ${subPage.is_Save ? 'checked' : ''}></td>
							<td><input type="checkbox" class="form-check-input child-action" ${subPage.is_Delete ? 'checked' : ''}></td>
						</tr>`;
						tbody.append(subRow);
					});
				});
			});
		}
	});



</script>
<script>
	$("#addPrivilegeMaster").click( () => {

		   $("#addPrivilegeMasterModal").modal('show');

	})
	function bindBranch() {
		$.ajax({
			url: '@baseUrl/BranchAPI/GetAllBranch',
			method: 'GET',
			success: function(data) {
				if (data.isSuccess) {
					const branchesContainer = $('#branchesContainer');
					branchesContainer.find('.branch-item').remove(); // Clear existing branch items

					// Iterate over each branch in the data
					data.data.forEach(branch => {
						// Create a div for each branch
						const branchDiv = $('<div>', {
							class: 'branch-item',
							'data-branch-id': branch.branchId
						});

						// Create a checkbox for each branch
						const checkbox = $('<input>', {
							type: 'checkbox',
							id: `branch-${branch.branchId}`,
							class: 'branch-checkbox'
						});

						// Create a label for the checkbox
						const label = $('<label>', {
							for: `branch-${branch.branchId}`,
							text: branch.branchName
						});

						// Append the checkbox and label to the branch div
						branchDiv.append(checkbox, label);

						// Append the branch div to the container
						branchesContainer.append(branchDiv);
					});

					// Add event listener for the "Select All" checkbox
					$('#selectAllBranch').on('change', function() {
						const isChecked = $(this).is(':checked');
						$('.branch-checkbox').prop('checked', isChecked);
					});
				}
			},
			error: function(error) {
				console.error('Error fetching branch data:', error);
			}
		});
	}

	function bindDepartment() {
		$.ajax({
			url: '@baseUrl/DepartmentAPI/GetAllDepartment',
			method: 'GET',
			success: function(data) {
				console.log('Data received:', data); // Log the data to the console

				if (data.isSuccess && data.data) {
					const departmentsContainer = $('#departmentContainer'); // Ensure this ID matches your HTML

					// Check if the container exists
					if (!departmentsContainer.length) {
						console.error('Departments container not found');
						return;
					}

					departmentsContainer.find('.department-item').remove(); // Clear existing department items

					// Iterate over each department in the data
					data.data.forEach(department => {
						// Create a div for each department
						const departmentDiv = $('<div>', {
							class: 'department-item',
							'data-department-id': department.departmentId
						});

						// Create a checkbox for each department
						const checkbox = $('<input>', {
							type: 'checkbox',
							id: `department-${department.departmentId}`,
							class: 'department-checkbox'
						});

						// Create a label for the checkbox
						const label = $('<label>', {
							for: `department-${department.departmentId}`,
							text: department.departmentName
						});

						// Append the checkbox and label to the department div
						departmentDiv.append(checkbox, label);

						// Append the department div to the container
						departmentsContainer.append(departmentDiv);
					});

					// Add event listener for the "Select All" checkbox
					$('#selectAllDepartment').on('change', function() {
						const isChecked = $(this).is(':checked');
						$('.department-checkbox').prop('checked', isChecked);
					});
				} else {
					console.error('Data fetch was not successful or data is missing');
				}
			},
			error: function(error) {
				console.error('Error fetching department data:', error);
			}
		});
	}

	// Call the function to bind departments
	$(document).ready(function() {

     	bindBranch();

		bindDepartment();
	});



	
	 //  const privilegeData = [
		// 	{ privilegeName: "Control Panel", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Company Information", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: false },
		// 	{ privilegeName: "Change Password", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: false },
		// 	{ privilegeName: "Company General Setting", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Professional Tax Setting", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Privilege Setting", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Import Data", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Scheme", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Email Setting", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Admin Settings", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Employee Directory", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Masters", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Employee", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Leave", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true },
		// 	{ privilegeName: "Loan/Claim", viewPrivilege: true, editPrivilege: true, savePrivilege: true, deletePrivilege: true }
		// ];

		// const tableBody = document.querySelector('#privilegeTable tbody');

		// privilegeData.forEach(privilege => {
		// 	const row = document.createElement('tr');

		// 	const nameCell = document.createElement('td');
		// 	nameCell.textContent = privilege.privilegeName;
		// 	row.appendChild(nameCell);

		// 	const viewCell = document.createElement('td');
		// 	const viewCheckbox = document.createElement('input');
		// 	viewCheckbox.type = 'checkbox';
		// 	viewCheckbox.checked = privilege.viewPrivilege;
		// 	viewCell.appendChild(viewCheckbox);
		// 	row.appendChild(viewCell);

		// 	const editCell = document.createElement('td');
		// 	const editCheckbox = document.createElement('input');
		// 	editCheckbox.type = 'checkbox';
		// 	editCheckbox.checked = privilege.editPrivilege;
		// 	editCell.appendChild(editCheckbox);
		// 	row.appendChild(editCell);

		// 	const saveCell = document.createElement('td');
		// 	const saveCheckbox = document.createElement('input');
		// 	saveCheckbox.type = 'checkbox';
		// 	saveCheckbox.checked = privilege.savePrivilege;
		// 	saveCell.appendChild(saveCheckbox);
		// 	row.appendChild(saveCell);

		// 	const deleteCell = document.createElement('td');
		// 	const deleteCheckbox = document.createElement('input');
		// 	deleteCheckbox.type = 'checkbox';
		// 	deleteCheckbox.checked = privilege.deletePrivilege;
		// 	deleteCell.appendChild(deleteCheckbox);
		// 	row.appendChild(deleteCell);

		// 	tableBody.appendChild(row);
		// });
</script>
@{
	ViewData["Title"] = "Page Master";
	Layout = "~/Views/Shared/_mainLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}


<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row m-2">
			<div class="col-6 ">
				<h6 class="pt-2 mb-0">
					Page Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					@* 					<i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
 *@				
                    <button id="addPageMaster"
							type="button"
							class="btn mr-1 rounded-1 "
							style="background-color:#2395c6; color:white;">
						Add
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">

		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div class="rowCount" id="rowCountPageMaster"></div>
					<div id="gridContainerPageMaster">
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>

				</div>
				<div id="spnNoRecord" style="display:none;">No Record Found!</div>

			</div>
		</div>
	</div>

</div>


<div class="modal fade" id="addPageMasterModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h6 class="modal-title btn-heading-title" id="exampleModalLabel">
					<span class="formType">Add</span> Page Master
				</h6>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">


				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-2 position-relative">
							<input type="text" class="form-control floating-input" id="txtPageName" placeholder="Page Name ">
							<label class="floating-label" for="txtPageName">Page Name*</label>
							<span id="spnPageName" style="color:red; display:none;">Please Enter Page Name</span>

						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group mt-2 position-relative">
							<input type="text" class="form-control floating-input" id="txtPageUrl" placeholder="Page Url ">
							<label class="floating-label" for="txtPageUrl">Page Url*</label>
							<span id="spnPageUrl" style="color:red; display:none;">Please Enter Page Url</span>

						</div>
					</div>

			    </div>
				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-2 position-relative">
							<input type="text" class="form-control floating-input" id="txtAliasPageName" placeholder="Alias Page Name ">
							<label class="floating-label" for="txtAliasPageName">Alias Page Name*</label>
							<span id="spnAliasPageName" style="color:red; display:none;">Please Enter Alias Page Name</span>

						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group mt-2 position-relative">
							<input type="text" class="form-control floating-input" id="txtSort" placeholder="Sort ">
							<label class="floating-label" for="txtSort">Sort*</label>
							<span id="spnSort" style="color:red; display:none;">Please Enter Sorting</span>

						</div>
					</div>

				</div>
				<div class="row mb-2">
					<div class="col-md-2 mt-3 ">
						<div class="form-check">
							<input class="form-check-input" checked name="MenuType" type="radio" id="rdMenu">
							<label class="form-check-label" for="rdMenu">Menu</label>
						</div>
					</div>
					<div class="col-md-2 mt-3 ">
						<div class="form-check">
							<input class="form-check-input" name="MenuType" type="radio" id="rdSubMenu">
							<label class="form-check-label" for="rdESSPanel">Sub Menu</label>
						</div>
					</div>
					<div class="col-md-4" id="menuDropdownContainer" style="display:none;">
						<div class="form-group mt-3 position-relative" >
							<select class="form-control floating-input" id="ddlMenu">
								<option value="" selected disabled>Select</option>
								
							</select>
							<label class="floating-label" for="ddlMenu">Menu *</label>
							<span id="spnMenu" style="color:red; display:none;">Please Select Menu</span>

						</div>
					</div>
				@* 	<div class="col-md-4"  >
						<div class="form-group mt-3 position-relative">
							<select class="form-control floating-input" id="ddlModule">
								<option value="" selected disabled>Select</option>

							</select>
							<label class="floating-label" for="ddlModule">Module *</label>
							<span id="spnModule" style="color:red; display:none;">Please Select Module</span>

						</div>
					</div> *@
					<div class="col-md-4"  >
						<div class="form-group mt-3 position-relative">
							<select class="form-control floating-input" id="ddlPagePanel">
								<option value="" selected disabled>Select</option>

							</select>
							<label class="floating-label" for="ddlPagePanel">Page Panel*</label>
							<span id="spnPagePanel" style="color:red; display:none;">Please Select Page Panel</span>

						</div>
					</div>

				</div>

			<div class="modal-footer btn-heading-title">
					<button type="button" class="btn btn-primary" id="btnAddPageMaster" style="background-color:#2395c6; color:white;">Save</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
		</div>
	</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<script>
	let PageMasterId=0;
	$("#addPageMaster").click( () => {
		resetFormFields();
		 $(".formType").text("Add");
			$("#btnAddPageMaster").text("Save");
	  $("#addPageMasterModal").modal('show');

	})

	   function loadMenuOptions() {

			   $.ajax({
					  url: '@baseUrl/PageMasterAPI/GetAllMenuPages', // Replace with your actual API endpoint
				   method: 'GET',
				   success: function(data) {
					   if(data.isSuccess){
						   var dropdown = $('#ddlMenu');
						   dropdown.empty();
						   dropdown.append('<option value="" selected disabled>Select</option>');
						   $.each(data.data, function(index, pageMaster) {
							   dropdown.append($('<option>', {
								   value: pageMaster.pageMasterId,
								   text: pageMaster.pageName
							   }));
						   });
					   }
				   },
				   error: function(error) {
					   console.error('Error fetching menu options:', error);
				   }
			   });
		   }

		      function loadPagePanel() {

				  $.ajax({
					  url: '@baseUrl/PagePanelAPI/GetAllPagePanels', // Replace with your actual API endpoint
					  method: 'GET',
					  success: function(data) {
						  if(data.isSuccess){
								 var dropdown = $('#ddlPagePanel');
							  dropdown.empty();
							  dropdown.append('<option value="" selected disabled>Select</option>');
								 $.each(data.data, function(index, pagePanel) {
								  dropdown.append($('<option>', {
											value: pagePanel.pagePanelId,
											text: pagePanel.pagePanelName
								  }));
							  });
						  }
					  },
					  error: function(error) {
						  console.error('Error fetching menu options:', error);
					  }
				  });
			  }

				 // Load module options into dropdown
			   function loadModuleOptions() {
				   var compnayId=$('#companyDropdown').val();
				   if (!compnayId) {
						  round_error_noti("Please select company");
						  return;
					  }

				  $.ajax({
					 url: '@baseUrl/ModuleDetailsAPI/GetAllModuleDetailsByCompanyId/'+compnayId, // Replace with your actual API endpoint
						 method: 'GET',
					  success: function(data) {
						  if(data.isSuccess){
								 var dropdown = $('#ddlModule');
							  dropdown.empty();
							  dropdown.append('<option value="" selected disabled>Select</option>');
								 $.each(data.data, function(index, module) {
								  dropdown.append($('<option>', {
											value: module.moduleDetailsId,
										 text: module.moduleName
								  }));
							  });
						  }
					  },
					  error: function(error) {
							 console.error('Error fetching module options:', error);
					  }
				  });
			  }



	  $(document).ready(function() {
					loadMenuOptions();
					loadPagePanel();
					PageMasterDataTable();
		// Toggle dropdown visibility based on radio button selection
		$('input[name="MenuType"]').change(function() {
			if ($(this).attr('id') === 'rdSubMenu') {
				$('#menuDropdownContainer').show();
			} else {
				$('#menuDropdownContainer').hide();
				$('#spnMenu').hide(); // Hide error message for menu dropdown when not needed
			}
		});

		
		
		// Function to validate form fields
		function validateForm() {
			let isValid = true;

			// Validate Page Name
			if ($('#txtPageName').val().trim() === '') {
				$('#spnPageName').show();
				isValid = false;
			} else {
				$('#spnPageName').hide();
			}

			// Validate Page URL
			if ($('#txtPageUrl').val().trim() === '') {
				$('#spnPageUrl').show();
				isValid = false;
			} else {
				$('#spnPageUrl').hide();
			}

			// Validate Alias Page Name
			if ($('#txtAliasPageName').val().trim() === '') {
				$('#spnAliasPageName').show();
				isValid = false;
			} else {
				$('#spnAliasPageName').hide();
			}

			// Validate Sort
			if ($('#txtSort').val().trim() === '') {
				$('#spnSort').show();
				isValid = false;
			} else {
				$('#spnSort').hide();
			}

			// Validate Menu Dropdown if Sub Menu is selected
			if ($('#rdSubMenu').is(':checked') && $('#ddlMenu').val() === null) {
				$('#spnMenu').show();
				isValid = false;
			} else {
				$('#spnMenu').hide();
			}
			// Validate module Dropdown if Sub Menu is selected
			// if ($('#ddlModule').val() === null) {
			// 		$('#spnModule').show();
			// 	isValid = false;
			// } else {
			// 	$('#spnModule').hide();
			// }
			   if ($('#ddlPagePanel').val() === null) {
					 $('#spnPagePanel').show();
				   isValid = false;
			   } else {
					  $('#spnPagePanel').hide();
			   }

			return isValid;
		}

		// Save PageMaster data
		$('#btnAddPageMaster').click(function() {
			   $('#btnAddPageMaster').prop("disabled",true);
			if (!validateForm()) {
				   $('#btnAddPageMaster').prop("disabled",false);
				return; // Stop execution if validation fails
			}
			   var pageMaster={};
			 if(PageMasterId==0){
				 pageMaster = {
					PageMasterId:PageMasterId,
					PageName: $('#txtPageName').val(),
					AliasPageName: $('#txtAliasPageName').val(),
					PageUrl: $('#txtPageUrl').val(),
					SortId: $('#txtSort').val(),
					PagePanelId: $('#ddlPagePanel').val(),
					// ModuleDetailsId: $('#ddlModule').val(),
					IsActive: true,
					UnderPageMasterId: $('#rdMenu').is(':checked') ? -1 : $('#ddlMenu').val(),
					UnderPageMasterName: $('#rdMenu').is(':checked') ? null : $('#ddlMenu option:selected').text(),
					CreatedBy:null
				};
			 }
			 else{
					pageMaster = {
					   PageMasterId:PageMasterId,
					   PageName: $('#txtPageName').val(),
					   AliasPageName: $('#txtAliasPageName').val(),
					   PageUrl: $('#txtPageUrl').val(),
					   SortId: $('#txtSort').val(),
					  //ModuleDetailsId: $('#ddlModule').val(),
						PagePanelId: $('#ddlPagePanel').val(),
					   IsActive: true,
					   UnderPageMasterId: $('#rdMenu').is(':checked') ? -1 : $('#ddlMenu').val(),
						 UnderPageMasterName: $('#rdMenu').is(':checked') ? null : $('#ddlMenu option:selected').text(),
					   UpdatedBy:null
					}
			 }
			//console.log("pageMaster",pageMaster);
			// AJAX call to save PageMaster data
			$.ajax({
				url: '@baseUrl/PageMasterAPI/CreatePageMaster', // Replace with your actual API endpoint
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(pageMaster),
				success: function(response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage);
						   PageMasterDataTable();
						$('#addPageMasterModal').modal('hide');
					} else {
						round_error_noti(response.responseMessage);
					}
				  $('#btnAddPageMaster').prop("disabled",false);
				},
				error: function(error) {
						 $('#btnAddPageMaster').prop("disabled",false);
					console.error('Error saving PageMaster:', error);
					round_error_noti('An error occurred while saving the PageMaster.');
				}
			});
	    });
	 });

	function PageMasterDataTable() {
		$.ajax({
			type: "GET",
			url: '@baseUrl/PageMasterAPI/GetAllPageMaster',
			success: function (data) {
				if (data.isSuccess) {
					$("#spnNoRecord").hide();

					$("#gridContainerPageMaster").dxDataGrid({
						dataSource: data.data,
						rowHeight: 40,
						width: '100%',
						columns: [
							{ dataField: 'pageName', caption: 'Page Name', alignment: 'left', width: 200 },
							{ dataField: 'aliasPageName', caption: 'Alias Page Name', alignment: 'left', width: 200 },
							{ dataField: 'pageUrl', caption: 'Page URL', alignment: 'left', width: 200 },
							{ dataField: 'sortId', caption: 'Sort ID', alignment: 'left', width: 100 },
							{ dataField: 'underPageMasterName', caption: 'Under Page Name', alignment: 'left', width: 200 },
							{ dataField: 'pagePanelName', caption: 'Page Panel Name', alignment: 'left', width: 200 },
							{
								dataField: 'isActive',
								caption: 'Active',
								alignment: 'center',
								width: 100,
								cellTemplate: function (container, options) {
									$('<div>').text(options.value ? 'Yes' : 'No').appendTo(container);
								}
							},
							{
								dataField: '',
								caption: '',
								alignment: 'center',
								width: 50,
								type: 'buttons',
								fixed: true,
								fixedPosition: 'right',
								cellTemplate: function (container, options) {
									$('<div class="d-flex order-actions">' +
										'<a href="javascript:;" class="edit-action" title="Edit Page">' +
										'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">' +
										'<path d="M12.146.854a.5.5 0 0 1 .708 0L15 3l-1.5 1.5L10.5 2.5 12.146.854zM9.5 3.5L1 12v3h3l8.5-8.5L9.5 3.5z"/>' +
										'</svg></a></div>')
										.on('dxclick', function () {
											editPageMaster(options.data);
										}).appendTo(container);
								}
							},
							{
								dataField: '',
								caption: '',
								alignment: 'center',
								width: 50,
								type: 'buttons',
								fixed: true,
								fixedPosition: 'right',
								cellTemplate: function (container, options) {
									$('<div class="d-flex order-actions">' +
										'<a href="javascript:;" class="delete-action" title="Delete Page">' +
										'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">' +
										'<path d="M5.5 5.5a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0v-6a.5.5 0 0 1 .5-.5zm2.5.5a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0v-6z"/>' +
										'<path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1V2h13v1zM4.118 4l.447 9.447A1 1 0 0 0 5.563 14h4.875a1 1 0 0 0 .998-.553L11.882 4H4.118z"/>' +
										'</svg></a></div>')
										.on('dxclick', function () {
											deletePageMaster(options.data);
										}).appendTo(container);
								}
							}
						],
						columnsAutoWidth: false,
						wordWrapEnabled: false,
						showBorders: true,
						rowAlternationEnabled: false,
						grouping: { autoExpandAll: true },
						paging: { pageSize: 10 },
						pager: {
							showPageSizeSelector: true,
							allowedPageSizes: [10, 25, 50, 100]
						},
						headerFilter: { visible: true },
						filterRow: { visible: true, applyFilter: "auto" },
						allowColumnResizing: true,
						groupPanel: { visible: true },
						searchPanel: { visible: true, width: 240, placeholder: "Search..." },
						columnFixing: { enabled: true },
						scrolling: {
							mode: "standard",
							useNative: false,
							scrollByContent: true,
							scrollByThumb: true
						},
						onContentReady: function (e) {
							$('#rowCountPageMaster').html('Total Records: ' + e.component.totalCount());
						}
					});
				} else {
					$("#spnNoRecord").show();
				}
			},
			error: function (xhr, status, error) {
				console.error("AJAX Error:", status, error);
			}
		});
	}


	   function editPageMaster(pageMaster) {
		   resetFormFields();
			$(".formType").text("Update");
		   $("#btnAddPageMaster").text("Update");

		 PageMasterId=pageMaster.pageMasterId;
		$('#txtPageName').val(pageMaster.pageName);
		$('#txtAliasPageName').val(pageMaster.aliasPageName);
		$('#txtPageUrl').val(pageMaster.pageUrl);
		$('#txtSort').val(pageMaster.sortId);
		  //$('#ddlModule').val(pageMaster.moduleDetailsId);
				$('#ddlPagePanel').val(pageMaster.pagePanelId);

		// Set the radio button based on whether it's a Menu or Sub Menu
		if (pageMaster.underPageMasterId === -1) {
			$('#rdMenu').prop('checked', true);
			$('#menuDropdownContainer').hide();
		} else {
			$('#rdSubMenu').prop('checked', true);
			$('#menuDropdownContainer').show();
			
				$('#ddlMenu').val(pageMaster.underPageMasterId);
			
		}

		// Show the modal for editing
		$('#addPageMasterModal').modal('show');

		
	}

    function resetFormFields() {
		 loadModuleOptions();
		  $('#btnAddPageMaster').prop("disabled",false);
		// Reset text input fields
		PageMasterId=0;
		$('#txtPageName').val('');
		$('#txtAliasPageName').val('');
		$('#txtPageUrl').val('');
		$('#txtSort').val('');

		// Reset radio buttons
		$('#rdMenu').prop('checked', true);
		$('#rdSubMenu').prop('checked', false);

		// Hide and reset the dropdown menu
		$('#menuDropdownContainer').hide();
		$('#ddlMenu').val('');
		  //$('#ddlModule').val('');
			 $('#ddlPagePanel').val('');

		// Hide all error messages
		$('#spnPageName').hide();
		$('#spnAliasPageName').hide();
		$('#spnPageUrl').hide();
		$('#spnSort').hide();
		$('#spnMenu').hide();
		$('#spnModule').hide();
	}

	  function  deletePageMaster(data)
	  {
		if (!confirm("Are you sure you want to delete this page?")) {
				return; // Cancel the delete operation
			}

			var deleteObj = {
				   id:data.pageMasterId,
				deletedBy: null // Set this to the actual user if needed
			};
			$.ajax({
			url: '@baseUrl/PageMasterAPI/DeletePageMaster',
				type: 'DELETE',
				contentType: 'application/json',
				data: JSON.stringify(deleteObj),
				success: function (response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage);
	                   PageMasterDataTable();
					} else {
						round_error_noti(response.responseMessage);
					}

				},
				error: function (error) {
					console.log('Error deleting reason!');
				}
			});
	  }
</script>
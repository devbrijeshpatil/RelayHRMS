<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">


<div class="card">
    <div class="card-header bg-transparent ml-0 py-0">
        <div class="row">
            <div class="col-6">
                <h6 class="pt-2 mb-0">
                    Manage Branch
                </h6>
            </div>

            <div class="col-6 d-flex justify-content-end align-items-center">
                <div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
                    <i class="fadeIn animated bx bx-refresh" id="getData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12 btn-heading-title">
                <div class="input-group mb-2">
                    <button id="addBranch"
                            type="button"
                            class="btn mr-1 rounded-1"
                            style="background-color:#2395c6; color:white;">
                        Add Branch
                    </button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="rowCount" id="rowCount1"></div>
                    <div id="gridContainer">
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addBranchModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title btn-heading-title" id="exampleModalLabel">Create Brach</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body modal-body-font">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Branch Name</label>
                            <input type="text"
                                   class="form-control"
                                   placeholder="Branch Name"
                                   id="txtBranchName" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Branch Code</label>
                            <input type="text"
                                   class="form-control"
                                   placeholder="Branch Code"
                                   id="txtBranchCode" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Company Name</label>
                            <input type="text"
                                   class="form-control"
                                   placeholder="Company Name"
                                   id="txtCompanyName   " />
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Address</label>
                            <textarea class="form-control"
                                      placeholder="Address"
                                      id="txtAddress"></textarea>
                            
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>City</label>
                            <input type="text"
                                   class="form-control"
                                   placeholder="City"
                                   id="txtCity" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Company Name</label>
                            <input type="text"
                                   class="form-control"
                                   placeholder="Company Name"
                                   id="txtCompanyName   " />
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer btn-heading-title">
                <button type="button" class="btn btn-primary btnCreateResume" id="btnCreateResume" style="background-color:#2395c6; color:white;">Create</button>
                <button type="button" class="btn btn-primary btnCreateResume" id="btnCreateResume1" style="display:none;background-color:#2395c6; color:white;">Show Resume</button>
                @* <button type="button" class="btn btn-primary" id="btnMoveToMarketing" style="background-color:#2395c6; color:white;">Move To Marketing</button> *@
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>

    $(() => {
        loadDataTable();
    });


    function loadDataTable() {

        $.ajax({
            type: "GET",
            url: 'https://localhost:7234/api/BranchAPI/GetAllBranch',
            success: function (data) {

                console.log("DTATAT", data)

                $("#gridContainer").dxDataGrid({
                    dataSource: data.data,
                    stateStoring: { enabled: true, type: 'localStorage', storageKey: 'technicalscreeningLocalstorage' },

                    columns: [

                        {
                            dataField: '', caption: '', alignment: 'center', dataType: 'string', format: '', type: 'buttons', width: '50px',
                            cellTemplate: function (container, options) {

                                var buttonElement = $('<div class="d-flex order-actions">' +
                                    '<a href="javascript:;" class="edit-action" title="Screening">' +
                                    '<i class="fadeIn animated bx bx-file"></i>' +
                                    '</a>' +
                                    '</div>')
                                    .on('dxclick', function () {
                                        technicalScreening(options.data);
                                    }).appendTo(container);
                                var iconElement = buttonElement.find('i');
                                if (options.data.technicalScreening.id == 0) {
                                    iconElement.css('color', 'red');
                                } else {
                                    iconElement.css('color', 'green');
                                }
                                iconElement.attr('title', 'Technical Screeninig');


                            }
                        },
                        {
                            dataField: '', caption: '', alignment: 'center', dataType: 'string', format: '', type: 'buttons', width: '50px',
                            cellTemplate: function (container, options) {

                                var buttonElement = $('<div class="d-flex order-actions">' +
                                    '<a href="javascript:;" class="edit-action" title="Move to Marketing">' +
                                    '<i class="fadeIn animated bx bx-send me-1""></i>' +
                                    '</a>' +
                                    '</div>')
                                    .on('dxclick', function () {
                                        movetoMarketing(options.data);
                                    }).appendTo(container);
                                var iconElement = buttonElement.find('i');
                                if (options.data.technicalScreening.id == 0) {
                                    iconElement.css('color', 'red');
                                } else {
                                    iconElement.css('color', 'green');
                                }
                                iconElement.attr('title', 'Move To Marketing');


                            }
                        },

                        { dataField: 'candidateName', caption: 'Name', alignment: 'center', dataType: 'string', format: '' },
                        {
                            dataField: 'candidatePhone', caption: 'Phone', alignment: 'center', dataType: 'string', format: '', customizeText: function (cellInfo) {
                                let phoneNumber = cellInfo.value;
                                if (phoneNumber && phoneNumber.startsWith('+')) {
                                    return phoneNumber.substring(1);
                                }
                                return phoneNumber;
                            }
                        },
                        { dataField: 'enrolled', caption: 'Enrolled', alignment: 'center', dataType: 'date', width: '120px', format: 'MM/dd/yyyy' },
                        //{ dataField: 'rucCompleted', caption: 'RUC Completed', alignment: 'center', dataType: 'date', width: '120px', format: 'MM/dd/yyyy' },
                        // { dataField: 'candidateEmail', caption: 'Email', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'expertName', caption: 'Expert Name', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'technology', caption: 'Technology', alignment: 'center', dataType: 'string', format: '' },
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: false,
                    rowAlternationEnabled: false,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    customizeColumns: function (columns) {
                        columns.forEach(function (column) {
                            if (column.dataField === 'enrolled') {
                                // Add editor options for date
                                column.editorOptions = {
                                    type: 'date',
                                    onKeyDown: function (e) {
                                        var key = e.event.key;
                                        // Allow only numbers (0-9), backspace (8), delete (46), and common date separators like '-' and '/'
                                        if (!/^[0-9\/\-]$/.test(key) && e.event.keyCode !== 8 && e.event.keyCode !== 46) {
                                            e.event.preventDefault();  // Prevent the default behavior for invalid keys
                                        }
                                    },
                                    onInput: function (e) {
                                        // Automatically format or handle input if necessary
                                        let value = e.component.option('value');
                                        // Add additional formatting logic if needed
                                    }
                                };
                            }
                        });
                    },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    onExporting: function (e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("Add", "visible", false);
                    },
                    onExported: function (e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("Add", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function (e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');

            }
        });
    }


    $("#addBranch").click(()=>{

        $("#addBranchModel").modal('show');


    });


</script>